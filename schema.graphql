type Query {
  user(userId: Int!): UserSchema!
  users: [UserSchema!]!
}

type UserSchema {
  id: ID!
  username: String!
  email: String!
  password: String!
}

type Mutation {
  user(data: UserCreateInput!): UserSchema!
  readFile(filename: String!, file: Upload!): UploadFileSchema!
  readFiles(files: [Upload!]!): [String!]!
  readFolder(folder: FolderInput!): [String!]!
}

input UserCreateInput {
  username: String!
  email: String!
  password: String!
}

type UploadFileSchema {
  filename: String!
}

scalar Upload

input FolderInput {
  files: [Upload!]!
}

type Subscription {
  userAddedSubscription: UserSchema!
}
